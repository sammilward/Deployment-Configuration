user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	gzip on;

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;

	upstream portainer {
		server 127.0.0.1:9000;
	}

	server {
    		server_name thesocialtraveler.ddns.net;

		location /docker/registry {
			proxy_set_header Upgrade $http_upgrade;
        		proxy_set_header Connection "upgrade";
        		proxy_pass http://127.0.0.1:5000;	
		}

		location /sonarqube {
			proxy_pass http://127.0.0.1:9999;

			set $yourlan thesocialtraveler.ddns.net;

  			proxy_set_header        Host $host;
  			proxy_set_header        X-Real-IP $remote_addr;
  			proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
 			proxy_connect_timeout   150;
  			proxy_send_timeout      100;
  			proxy_read_timeout      100;
  			proxy_buffers           4 32k;
 			client_max_body_size    8m;
 			client_body_buffer_size 128k;

   			proxy_redirect http://localhost:9000 http://$yourlan/sonarqube;
		}

		location /portainer/ {
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_pass http://portainer/;
		}

		location /IdentityService/ {
			proxy_pass http://127.0.0.1:5001;
			proxy_http_version 1.1;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $host:$server_port;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_buffering off;
		}
	
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/thesocialtraveler.ddns.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/thesocialtraveler.ddns.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


	server {
    if ($host = thesocialtraveler.ddns.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


		listen 80 default_server;
    		server_name thesocialtraveler.ddns.net;
    return 404; # managed by Certbot


}}
